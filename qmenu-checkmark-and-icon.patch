--- a/src/widgets/styles/qstylesheetstyle.cpp
+++ b/src/widgets/styles/qstylesheetstyle.cpp
@@ -3727,11 +3727,14 @@
                         iconRect.moveLeft(iconRect.left());
                     else
                         iconRect.moveRight(iconRect.right());
+                    if (checkable)
+                        iconRect.moveLeft(iconRect.left() + 24);
                     iconRule.drawRule(p, iconRect);
                     QRect pmr(0, 0, pixw, pixh);
                     pmr.moveCenter(iconRect.center());
                     p->drawPixmap(pmr.topLeft(), pixmap);
-                } else if (checkable) {
+                }
+                if (checkable) {
                     QRenderRule subSubRule = renderRule(w, opt, PseudoElement_MenuCheckMark);
                     if (subSubRule.hasDrawable() || checked) {
                         QStyleOptionMenuItem newMi = mi;
@@ -3746,6 +3749,8 @@
 
                 QRect textRect = subRule.contentsRect(opt->rect);
                 textRect.setLeft(textRect.left() + m->maxIconWidth);
+                if (!mi.icon.isNull() && checkable)
+                    textRect.setLeft(textRect.left() + 24);
                 textRect.setWidth(textRect.width() - mi.tabWidth);
                 const QRect vTextRect = visualRect(opt->direction, m->rect, textRect);
 
@@ -5093,7 +5098,10 @@
                 if (mi->text.contains(QLatin1Char('\t')))
                     sz.rwidth() += 12; //as in QCommonStyle
                 bool checkable = mi->checkType != QStyleOptionMenuItem::NotCheckable;
-                if (!mi->icon.isNull()) {
+                bool hasIcon = !mi->icon.isNull();
+                if (checkable && hasIcon) {
+                    sz.rwidth() += 24;
+                } else if (hasIcon) {
                     const int pmSmall = pixelMetric(PM_SmallIconSize);
                     const QSize pmSize = mi->icon.actualSize(QSize(pmSmall, pmSmall));
                     sz.rwidth() += pmSize.width() + 4;
